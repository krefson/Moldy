#! /usr/bin/perl
#
# Plotrdf.  This script reads "Moldy" output files and extracts RDF information
# skipping page breaks.
#
# Output format is in columns with different components laid out
# across the page "r rdf1 rdf2 rdf3 ..."
#
# If the -g flag is given the dara is output to a file and GNUPLOT commands to
# plot it are sent to the standard output instead.
#
$gpflag = 0;
$plotfd=*STDOUT;
while ($#ARGV > 0 && $ARGV[0] =~ /^-./ ) {
  $flag=shift @ARGV;
  $gpflag++  if ($flag eq "-g" ) ;
  $plotfile = $ARGV[0].".data";
  open PLOTFILE, ">$plotfile" || die "Failed to open plot file $plotfile for writing\n";
  $plotfd=*PLOTFILE;
}
$title=$ARGV[0];

$be = 0;
while ( <> ) {
  #
  # Reading phase
  #
  if ( /^_+$/ ... /^_+$/ ) {
    #
    # Store rdfs and column heads at end of "A-B RDF" block or and of RDFs
    #
    if ( (/^\s([^\s]+-[^\s]+) RDF$/ || /^_+$/) && @rdf != 0) {
      push @rdflist, [@rdf];
      push @hdrlist, $hdr;
      $nrdf = scalar(@rdf);
      @rdf = ();
    }
    # 
    # Record column header and binwidth
    #
    $hdr=$1 if (/^\s([^\s]+-[^\s]+) RDF$/);
    $binw=$1 if  (/^\sRadial Distribution Functions\sBin width=([0-9.]+)$/);
    #
    # Record data block
    #
    if ( /^[0-9.e ]+/ ) {
      chop;
      @line = split;
      @rdf = (@rdf, @line);
    }
  }
  #
  # RDF block is delimited by lined of underscores
  #
  if ( /^_+$/) {
    if ($be == 0) {
      @rdf=();
      $be++;
    } else {
      #
      # End of RDF block.  Print out results
      #
      $be = 0;
      $r = 0.5*$binw;
      printf $plotfd ("#%7s","r");
      foreach $hdr (@hdrlist ) {
	printf $plotfd (" %8s",$hdr);
      }
      printf $plotfd ("\n");
      for( $j=0; $j < $nrdf ; $j++) {
	printf $plotfd ("%8.3f", $r);
	foreach $i (0..$#hdrlist) {
	  printf $plotfd (" %8.3f",$rdflist[$i][$j]);
	}
	printf $plotfd ("\n");
	$r += $binw;
      }
    
      if ($gpflag ) {
	print   "set data style lines\n";
	print   "set title \"",$title,"\"\n";
	print   "set xlabel \"r(A)\"\n";
	print   "set ylabel \"g(r)\"\n";
	print   "set yrange  [0:5]\n";
	print   "plot \"$plotfile\" using 1:2 title \"$hdrlist[0]\"";
	foreach $i (2..@hdrlist ) {
	  print   ", \"$plotfile\" using 1:",$i+1," title \"$hdrlist[$i-1]\"" ;
	}
	print   "\n";
      }
      print   "pause -1\n" if ($gpflag);
    }
  }
}

