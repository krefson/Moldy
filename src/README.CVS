      FETCHING Moldy and building from CVS
      ====================================

I have now set up the remote CVS repository for download and developer
access to moldy.  Here's how to do it.  If you aren't familiar with
CVS visit http://www.cvshome.org and learn!

There are some fantastic GUI tools out there, notably LinCVS, cervisia (part
of KDE3) and gcvs, or if you are an emacs user there's a CVS interface
built in to the Tools menu.  However cervisia has the best graphical
tree view of the branch structure of modules.

Access uses SSH remote shell and the CVSROOT for the repository is

   :ext:moldy@cvs.isis.rl.ac.uk:/home/moldy/CVS

and the repository name is just "moldy" so the (shell) command to
check out a moldy source tree for development is
	
   setenv CVS_RSH ssh  (c-shell/tc-shell)
   export CVS_RSH=ssh  (bash etc)

   cvs co -d :ext:moldy@cvs.isis.rl.ac.uk:/home/moldy/CVS co moldy

After that a simple "cvs update" will bring you up to date.

AUTHORIZATION
=============

Access is granted using the SSH public key authentication method.  To
gain CVS access please email me (K.Refson AT rl DOT ac DOT uk) your
ssh2 public key or keys on the machine or machines you wish you access
the repository from.  Obviously, please guard the corresponding
private key doggedly and never give it away to anyone.

[Your public key will be found in a file called, eg "identity.pub",
"id_rsa.pub", "id_dsa.pub" or somesuch in your ".ssh" directory.  If
you don't have one the "ssh-keygen" command will create one for you.]

The easiest way to test whether your authorization is in place and
correctly set up is to issue the command 

   ssh moldy@cvs.isis.rl.ac.uk date

DEVELOPERS ACCESS
=================

Some users whom I authorize will have full checkin access.  Please
feel free to create new branches for your development work, but please
DO NOT check anything into the main branch without clearing it with me
first (trivial bugfixes excepted).

AFTER CHECKOUT
==============

To build after checkout you need a little more in addition to the
build distribution.  Prerequisites:

   GNU autoconf tools (autoconf, automake, autoheader and aclocal)
   Autoconf and autoheader MUST be version 2.50 or greater.
   If you don't have these you will need to install them.

If the tools are installed as the defaults...

  % make -f Makefile.cvs

will suffice.  Some Redhat Linux systems install these tools under
different names, or if you had to install yourself in user mode you
can do:

   % make -f Makefile.cvs AUTOCONF=<path-to-autoconf-2.5x> AUTOHEADER=...

if using GNU make or another make which allows you to change MAKE
variables on the command line.  Alternatively, just edit Makefile.cvs
and insert the correct pathname.

You are now ready to proceed with the usual "./configure; make" as per
anything built with the GNU tools.  See file README for more options.

